% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expire_status_by_inventory.R
\name{expire_status_by_inventory}
\alias{expire_status_by_inventory}
\alias{expire_state_by_inventory}
\title{change active status at end of inventory}
\usage{
expire_status_by_inventory(
  x,
  inventory = NULL,
  usage = 1,
  overflow_at = Inf,
  slim = FALSE
)

expire_state_by_inventory(
  x,
  inventory = NULL,
  usage = NULL,
  overflow_at = NULL,
  null.state = "",
  slim = FALSE
)
}
\arguments{
\item{x}{a data frame that contains 'id' and 't'}

\item{inventory}{inventory, if NULL needs to exists in 'x', if not NULL a
variable called 'inventory' will be created with the value(s) given here}

\item{usage}{numeric; depreciation of inventory per unit of time}

\item{overflow_at}{numeric; upper bound to inventory}

\item{slim}{logical; remove unnecessary statuses? If TRUE 'inventory' will
be dropped from the output as this data is no longer complete}

\item{null.state}{value assigned to expired state}
}
\value{
a data frame
}
\description{
Note: this is a rigid function that requires variabes 'id' and 't'.  This
function behaves much like \code{expire_status}, but the expiration boundary
is determined by end of inventory. At times 't' an individual ('id') gets
its inventory replenished by 'inventory' (which can be a fixed number or
given by that variable in the input data frame 'x'). The inventory
diminishes by 'usage' (1, by default) each unit of time. This function
calculates a 'status' variable which will be 1 as long as there is available
inventory, and 0 when it runs out.
}
\section{Functions}{
\itemize{
\item \code{expire_state_by_inventory}: generalization of
expire_status_by_inventory; the 'status' - now called 'state' - can be
multivalued; 'usage' and 'overflow_at' can be variables in 'x'
}}

\seealso{
\code{\link{expire_status}}
}
