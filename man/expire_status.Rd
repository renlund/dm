% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expire_status.R
\name{expire_status}
\alias{expire_status}
\alias{expire_state}
\title{change active status at expiration boundary}
\usage{
expire_status(x, expire = NULL, slim = FALSE)

expire_state(x, expire = NULL, null.state = "", slim = FALSE)
}
\arguments{
\item{x}{data frame with id variable 'id' and time variable 't'}

\item{expire}{expiration boundary, if NULL needs to exists in 'x', if not
NULL a variable called 'expire' will be created with the value(s) given
here}

\item{slim}{logical; remove unnecessary statuses?}

\item{null.state}{value assigned to expired state}
}
\value{
a data frame
}
\description{
Note: this is a rigid function that needs variables 'id' and 't' (and
optionally 'expire') and will create a variable 'status' (if such exists it
will be overwritten). Feed this function a data frame with variables 'id'
(identifier) and 't' (integer valued time measurement) and - optionally -
'expire' (positive numeri). 't' represents times for some event whose status
(1) should expire (to 0) (strictly) after the integer duration specified by
'expire' (unless the status is "refreshed" by having another 't'-value
before expiration). Duplicated times (per individual) will always be
removed, and the output can also be reduced to the smallest output that
keeps track of the changing status by setting parameter 'slim' to
\code{TRUE}.
}
\section{Functions}{
\itemize{
\item \code{expire_state}: generalization of expire_status; the 'status' - now
called 'state' - can be multivalued
}}

\seealso{
\code{\link{expire_inventory}}
}
